% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slicer.R
\name{slicer2UI}
\alias{slicer2UI}
\alias{slicer2}
\title{\code{slicer2} shiny module}
\usage{
slicer2UI(id)

slicer2(
  input,
  output,
  session,
  datatable,
  uiSequence,
  serverFunction,
  uiFunction,
  ...
)
}
\arguments{
\item{id}{An id string that corresponds with the id used to call the module's UI function.}

\item{input}{shiny server input object}

\item{output}{shiny server output object}

\item{session}{shiny server session object}

\item{datatable}{A reactive \code{data.table}.}

\item{uiSequence}{A \code{data.table} with columns \code{category}, \code{uiType},
and (optionally) \code{possibleValues}.
Both lists should contain elements of type character.
The \code{category} column should contain names of the categories
which will be subsequently fixed.
The \code{uiType} column should contain corresponding UI
which should be applied for each category choice.
The \code{possibleValues} column should contain a list of
the possible values for \code{category}.
If not supplied, possible values for each level of the list
will be determined based on the data.
Currently there are two possible UI types to perform: "tab" and "box",
which both make use of \pkg{shinydashboard}.}

\item{serverFunction}{A summary module server function.
This function should take, at minimum, the following arguments:
\code{datatable} and \code{id}.
Additional named arguments are passed via \code{...}.
Users have access to the full data.table if they need it
(e.g., to calculate histogram breaks) via \code{.dtFull},
as well as a list of the currently selected category values
via \code{.current}.
Inside the function there should be a call to a shiny
module server function using the \code{id}.
See example section and compare with \code{link[shiny]{callModule}}).}

\item{uiFunction}{A summary module function UI taking one argument: \code{id}.
Note: the \code{id} value is generated internally.
Inside the function there should be a call to shiny module UI function.
See example section.}

\item{...}{Additional arguments passed to \code{serverFunction}.}
}
\description{
A 2-D version of \code{slicer}.
}
